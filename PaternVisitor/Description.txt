Патерн Visitor (Візитер)
Патерн Visitor є одним із класичних патернів проектування, що належить до групи поведінкових патернів. 
Він дозволяє додавати нові операції до об'єктів без зміни їхніх класів. 
Це особливо корисно, коли треба змінити або розширити поведінку без необхідності модифікації структури об'єктів, з якими працює програма.

Ключова ідея:
У патерні Visitor додається окремий об'єкт (візитер), який "відвідує" елементи об'єктної структури, і виконує з ними певні операції. 
Це дозволяє змінювати поведінку об'єктів, не змінюючи їх класів. Візитер визначає операції, які потрібно виконати над елементами структури, 
а елементи цієї структури лише приймають візитерів.

Структура патерну:
Інтерфейс Візитера (Visitor): 
Це інтерфейс, який визначає методи для кожного елемента в структурі.

Конкретний Візитер (ConcreteVisitor): 
Клас, що реалізує інтерфейс візитера та визначає конкретну поведінку для кожного елемента структури.

Елемент (Element): 
Інтерфейс або абстрактний клас, який визначає метод accept(Visitor). Він дозволяє візитору відвідати себе.

Конкретні елементи (ConcreteElement): 
Реалізація елементів, на яких виконується операція візитера.

Об'єктна структура (ObjectStructure): 
Це колекція елементів, через яку буде проходити візитер.

Як це працює:
Елементи інтерфейсу (або абстрактного класу) надають метод accept(), який приймає об'єкт типу Visitor.
Візитер визначає методи для кожного конкретного елемента структури. Таким чином, візитер має можливість обробити елементи конкретних типів.
Коли візитер відвідує елемент, він викликає відповідний метод на елементі і виконує операцію.
Проблема, яку вирішує патерн:
Замість того, щоб створювати нові методи або підкласи для обробки нових операцій над елементами, 
патерн Visitor дозволяє додавати нові операції без зміни самих класів елементів.

Ключова проблема, яку вирішує патерн Visitor, полягає в необхідності додавати нові операції до об'єктів без зміни їхніх класів.